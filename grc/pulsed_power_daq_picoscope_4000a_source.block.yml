# auto-generated by grc.converter

id: pulsed_power_daq_picoscope_4000a_source
label: PicoScope 4000a
category: '[pulsed_power_daq]'
flags:
- throttle

parameters:
-   id: serial_number
    label: Serial Number
    dtype: string
    default: EW413/152

-   id: samp_rate
    label: Sample Rate (Hz)
    dtype: float
    default: samp_rate

-   id: acquisition_mode
    label: Acquisition Mode
    dtype: string
    default: Streaming
    options: [Rapid Block, Streaming]

-   id: trigger_once
    label: Trigger Once
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    
-   id: nr_waveforms
    label: Nr Captures
    dtype: int
    default: '5'
    
-   id: buff_size
    label: Buffer Size
    dtype: int
    default: '204800'
    
-   id: nr_buffers
    label: Nr. Buffers
    dtype: int
    default: '64'
    
-   id: driver_buff_size
    label: Overview Buffer Size
    dtype: int
    default: '102400'
    
-   id: poll_rate
    label: Poll Rate (s)
    dtype: float
    default: '0.0005'
    
-   id: pre_samples
    label: Pre-trigger Samples
    dtype: int
    default: '500000'
    
-   id: post_samples
    label: Post-trigger Samples
    dtype: int
    default: '10000'
    
-   id: downsampling_mode
    label: Downsampling Mode
    dtype: enum
    default: '0'
    options: ['0', '1', '2', '3']
    option_labels: [None, Min Max, Decimate, Average]

-   id: downsampling_factor
    label: Downsampling Factor
    dtype: int
    default: '1'

# Channel A
-   id: enable_ai_a
    label: Channel A
    category: Analog Config
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    option_labels: [Enable, Disable]
    hide: part

-   id: range_ai_a
    label: Range A
    category: Analog Config
    dtype: float
    default: '5'
    options: ['0.01', '0.02', '0.05', '0.1', '0.2', '0.5', '1', '2', '5', '10', '20',
        '50', '100', '200']
    option_labels: [10 mV, 20 mV, 50 mV, 100 mV, 200 mV, 500 mV, 1 V, 2 V, 5 V, 10
            V, 20 V, 50 V, 100 V, 200 V]
    hide: ${ ('part' if enable_ai_a else 'all') }

-   id: offset_ai_a
    label: Range Offset A (V)
    category: Analog Config
    dtype: float
    default: '0.0'
    hide: ${ ('part' if enable_ai_a else 'all') }

-   id: coupling_ai_a
    label: Coupling A
    category: Analog Config
    dtype: int
    default: '1'
    options: ['0', '1']
    option_labels: [DC_1M, AC_1M]
    hide: ${ ('part' if enable_ai_a else 'all') }


# Channel B
-   id: enable_ai_b
    label: Channel B
    category: Analog Config
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    option_labels: [Enable, Disable]
    hide: part

-   id: range_ai_b
    label: Range B
    category: Analog Config
    dtype: float
    default: '1'
    options: ['0.01', '0.02', '0.05', '0.1', '0.2', '0.5', '1', '2', '5', '10', '20',
        '50', '100', '200']
    option_labels: [10 mV, 20 mV, 50 mV, 100 mV, 200 mV, 500 mV, 1 V, 2 V, 5 V, 10
            V, 20 V, 50 V, 100 V, 200 V]
    hide: ${ ('part' if enable_ai_b else 'all') }

-   id: offset_ai_b
    label: Range Offset B (V)
    category: Analog Config
    dtype: float
    default: '0.0'
    hide: ${ ('part' if enable_ai_b else 'all') }

-   id: coupling_ai_b
    label: Coupling B
    category: Analog Config
    dtype: int
    default: '1'
    options: ['0', '1']
    option_labels: [DC_1M, AC_1M]
    hide: ${ ('part' if enable_ai_b else 'all') }

# Channel OTHER
-   id: enable_ai_c
    label: Channel C
    category: Analog Config
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    option_labels: [Enable, Disable]
    hide: part

-   id: range_ai_c
    label: Range C
    category: Analog Config
    dtype: float
    default: '5.0'
    options: ['0.01', '0.02', '0.05', '0.1', '0.2', '0.5', '1', '2', '5', '10', '20',
        '50', '100', '200']
    option_labels: [10 mV, 20 mV, 50 mV, 100 mV, 200 mV, 500 mV, 1 V, 2 V, 5 V, 10
            V, 20 V, 50 V, 100 V, 200 V]
    hide: ${ ('part' if enable_ai_c else 'all') }

-   id: offset_ai_c
    label: Range Offset C (V)
    category: Analog Config
    dtype: float
    default: '5.0'
    hide: ${ ('part' if enable_ai_c else 'all') }

-   id: coupling_ai_c
    label: Coupling C
    category: Analog Config
    dtype: int
    default: '0'
    options: ['0', '1']
    option_labels: [DC_1M, AC_1M]
    hide: ${ ('part' if enable_ai_c else 'all') }

#  
-   id: enable_ai_d
    label: Channel D
    category: Analog Config
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    option_labels: [Enable, Disable]
    hide: part

-   id: range_ai_d
    label: Range D
    category: Analog Config
    dtype: float
    default: '5.0'
    options: ['0.01', '0.02', '0.05', '0.1', '0.2', '0.5', '1', '2', '5', '10', '20',
        '50', '100', '200']
    option_labels: [10 mV, 20 mV, 50 mV, 100 mV, 200 mV, 500 mV, 1 V, 2 V, 5 V, 10
            V, 20 V, 50 V, 100 V, 200 V]
    hide: ${ ('part' if enable_ai_d else 'all') }
-   id: offset_ai_d
    label: Range Offset D (V)
    category: Analog Config
    dtype: float
    default: '0.0'
    hide: ${ ('part' if enable_ai_d else 'all') }
-   id: coupling_ai_d
    label: Coupling D
    category: Analog Config
    dtype: int
    default: '0'
    options: ['0', '1']
    option_labels: [DC_1M, AC_1M]
    hide: ${ ('part' if enable_ai_d else 'all') }
-   id: enable_ai_e
    label: Channel E
    category: Analog Config
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    option_labels: [Enable, Disable]
    hide: part
-   id: range_ai_e
    label: Range E
    category: Analog Config
    dtype: float
    default: '5'
    options: ['0.01', '0.02', '0.05', '0.1', '0.2', '0.5', '1', '2', '5', '10', '20',
        '50', '100', '200']
    option_labels: [10 mV, 20 mV, 50 mV, 100 mV, 200 mV, 500 mV, 1 V, 2 V, 5 V, 10
            V, 20 V, 50 V, 100 V, 200 V]
    hide: ${ ('part' if enable_ai_e else 'all') }
-   id: offset_ai_e
    label: Range Offset E (V)
    category: Analog Config
    dtype: float
    default: '0.0'
    hide: ${ ('part' if enable_ai_e else 'all') }
-   id: coupling_ai_e
    label: Coupling E
    category: Analog Config
    dtype: int
    default: '0'
    options: ['0', '1']
    option_labels: [DC_1M, AC_1M]
    hide: ${ ('part' if enable_ai_e else 'all') }
-   id: enable_ai_f
    label: Channel F
    category: Analog Config
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    option_labels: [Enable, Disable]
    hide: part
-   id: range_ai_f
    label: Range F
    category: Analog Config
    dtype: float
    default: '5'
    options: ['0.01', '0.02', '0.05', '0.1', '0.2', '0.5', '1', '2', '5', '10', '20',
        '50', '100', '200']
    option_labels: [10 mV, 20 mV, 50 mV, 100 mV, 200 mV, 500 mV, 1 V, 2 V, 5 V, 10
            V, 20 V, 50 V, 100 V, 200 V]
    hide: ${ ('part' if enable_ai_f else 'all') }
-   id: offset_ai_f
    label: Range Offset F (V)
    category: Analog Config
    dtype: float
    default: '0.0'
    hide: ${ ('part' if enable_ai_f else 'all') }
-   id: coupling_ai_f
    label: Coupling F
    category: Analog Config
    dtype: int
    default: '0'
    options: ['0', '1']
    option_labels: [DC_1M, AC_1M]
    hide: ${ ('part' if enable_ai_f else 'all') }
-   id: enable_ai_g
    label: Channel G
    category: Analog Config
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    option_labels: [Enable, Disable]
    hide: part
-   id: range_ai_g
    label: Range G
    category: Analog Config
    dtype: float
    default: '5.0'
    options: ['0.01', '0.02', '0.05', '0.1', '0.2', '0.5', '1', '2', '5', '10', '20',
        '50', '100', '200']
    option_labels: [10 mV, 20 mV, 50 mV, 100 mV, 200 mV, 500 mV, 1 V, 2 V, 5 V, 10
            V, 20 V, 50 V, 100 V, 200 V]
    hide: ${ ('part' if enable_ai_g else 'all') }
-   id: offset_ai_g
    label: Range Offset G (V)
    category: Analog Config
    dtype: float
    default: '5.0'
    hide: ${ ('part' if enable_ai_g else 'all') }
-   id: coupling_ai_g
    label: Coupling G
    category: Analog Config
    dtype: int
    default: '0'
    options: ['0', '1']
    option_labels: [DC_1M, AC_1M]
    hide: ${ ('part' if enable_ai_g else 'all') }
-   id: enable_ai_h
    label: Channel H
    category: Analog Config
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    option_labels: [Enable, Disable]
    hide: part
-   id: range_ai_h
    label: Range H
    category: Analog Config
    dtype: float
    default: '5.0'
    options: ['0.01', '0.02', '0.05', '0.1', '0.2', '0.5', '1', '2', '5', '10', '20',
        '50', '100', '200']
    option_labels: [10 mV, 20 mV, 50 mV, 100 mV, 200 mV, 500 mV, 1 V, 2 V, 5 V, 10
            V, 20 V, 50 V, 100 V, 200 V]
    hide: ${ ('part' if enable_ai_h else 'all') }
-   id: offset_ai_h
    label: Range Offset H (V)
    category: Analog Config
    dtype: float
    default: '0.0'
    hide: ${ ('part' if enable_ai_h else 'all') }
-   id: coupling_ai_h
    label: Coupling H
    category: Analog Config
    dtype: int
    default: '0'
    options: ['0', '1']
    option_labels: [DC_1M, AC_1M]
    hide: ${ ('part' if enable_ai_h else 'all') }
-   id: trigger_source
    label: Trigger Source
    category: Triggers
    dtype: string
    default: None
    options: [None, A, B, C, D, E, F, G, H]
    hide: part
-   id: trigger_direction
    label: Trigger Direction
    category: Triggers
    dtype: int
    default: '0'
    options: ['0', '1', '2', '3']
    option_labels: [Rising, Falling, Low, High]
    hide: ${ ('all' if trigger_source == 'None'  else 'part') }
-   id: trigger_threshold
    label: Trigger Threshold (V)
    category: Triggers
    dtype: float
    default: '2.5'
    hide: ${ ('all' if trigger_source == 'None' else 'part') }

outputs:
-   label: ai_a
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: err_a
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: ai_b
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: err_b
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: ai_c
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: err_c
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: ai_d
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: err_d
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: ai_e
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: err_e
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: ai_f
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: err_f
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: ai_g
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: err_g
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: ai_h
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true
-   label: err_h
    domain: stream
    dtype: float
    multiplicity: '1'
    optional: true

templates:
    imports: import pulsed_power_daq

    make: "pulsed_power_daq.picoscope_4000a_source(${serial_number}, True)\nself.${id}.set_trigger_once(${trigger_once})\n\
        self.${id}.set_samp_rate(${samp_rate})\nself.${id}.set_downsampling(${downsampling_mode},\
        \ ${downsampling_factor})\nself.${id}.set_aichan_a(${enable_ai_a}, ${range_ai_a},\
        \ ${coupling_ai_a}, ${offset_ai_a})\nself.${id}.set_aichan_b(${enable_ai_b},\
        \ ${range_ai_b}, ${coupling_ai_b}, ${offset_ai_b})\nself.${id}.set_aichan_c(\
        \ ${enable_ai_c}, ${range_ai_c}, ${coupling_ai_c}, ${offset_ai_c})\nself.${id}.set_aichan_d(\
        \ ${enable_ai_d}, ${range_ai_d}, ${coupling_ai_d}, ${offset_ai_d})\nself.${id}.set_aichan_e(\
        \ ${enable_ai_e}, ${range_ai_e}, ${coupling_ai_e}, ${offset_ai_e})\nself.${id}.set_aichan_f(\
        \ ${enable_ai_f}, ${range_ai_f}, ${coupling_ai_f}, ${offset_ai_f})\nself.${id}.set_aichan_g(\
        \ ${enable_ai_g}, ${range_ai_g}, ${coupling_ai_g}, ${offset_ai_g})\nself.${id}.set_aichan_h(\
        \ ${enable_ai_h}, ${range_ai_h}, ${coupling_ai_h}, ${offset_ai_h})\n\nif ${trigger_source}\
        \ != 'None':\n    self.${id}.set_aichan_trigger(${trigger_source}, ${trigger_direction},\
        \ ${trigger_threshold})\n\nif ${acquisition_mode} == 'Streaming':\n\
        \    self.${id}.set_nr_buffers(${nr_buffers})\n    self.${id}.set_driver_buffer_size(${driver_buff_size})\n\
        \    self.${id}.set_streaming(${poll_rate})\nelse:\n    self.${id}.set_buffer_size(${buff_size})\n\
        \    self.${id}.set_rapid_block(${nr_waveforms})\n    "
        #be careful in this entire make sequence. It gets translated directly into python code. Indentation is important

    #self.${id}.set_buffer_size(${buff_size})\n
    #self.${id}.set_samples(${pre_samples},\
    #    \ ${post_samples})
    callbacks:

    # - set_aichan_a("A", true, 5.0, 1)
    # - set_aichan_b("B", true, 1.0, 1)
   
    - set_samp_rate(${samp_rate})
    - set_samples(${pre_samples}, ${post_samples})
    
    # - set_nr_buffers(${nr_buffers})
    # - set_driver_buffer_size(${driver_buff_size})
    # - set_streaming(${poll_rate})

    - set_trigger_once(${trigger_once})
    - set_downsampling(${downsampling_mode}, ${downsampling_factor})
    - set_aichan_trigger(${trigger_source}, ${trigger_direction}, ${trigger_threshold})
    - set_aichan_a(${enable_ai_a}, ${range_ai_a}, ${coupling_ai_a}, ${offset_ai_a})
    - set_aichan_b(${enable_ai_b}, ${range_ai_b}, ${coupling_ai_b}, ${offset_ai_b})
    - set_aichan_c(${enable_ai_c}, ${range_ai_c}, ${coupling_ai_c}, ${offset_ai_c})
    - set_aichan_d(${enable_ai_d}, ${range_ai_d}, ${coupling_ai_d}, ${offset_ai_d})
    - set_aichan_e(${enable_ai_e}, ${range_ai_e}, ${coupling_ai_e}, ${offset_ai_e})
    - set_aichan_f(${enable_ai_f}, ${range_ai_f}, ${coupling_ai_f}, ${offset_ai_f})
    - set_aichan_g(${enable_ai_g}, ${range_ai_g}, ${coupling_ai_g}, ${offset_ai_g})
    - set_aichan_h(${enable_ai_h}, ${range_ai_h}, ${coupling_ai_h}, ${offset_ai_h})
    - set_rapid_block(${nr_waveforms})
    
    - set_nr_buffers(${nr_buffers})
    - set_streaming(${poll_rate})
    - set_driver_buffer_size(${driver_buff_size})
    - set_buffer_size(${buff_size})

file_format: 1
