id: pulsed_power_daq_mains_frequency_calc
label: mains_frequency_calc
category: '[pulsed_power_daq]'

templates:
  imports: import pulsed_power_daq
  make: pulsed_power_daq.mains_frequency_calc(${expected_sample_rate},${low_threshold},${high_threshold})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: expected_sample_rate
  label: Expected sample rate
  dtype: float
  default: 2000000

- id: low_threshold
  label: Low Threshold
  dtype: float
  default: -100

- id: high_threshold
  label: High Threshold
  dtype: float
  default: 100
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: Voltage
#  domain: ...
  dtype: float
#  vlen: ...
#  optional: ...

outputs:
- label: Frequency
#  domain: ...
  dtype: float
#  vlen: ...
#  optional: ...

documentation: |-
    This block calculates mains frequency. 
    For computation the expected sample rate needs to match the input sample rate.
    Thresholds are the measure points for half periods. They need to fall within the input's amplitude.

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
