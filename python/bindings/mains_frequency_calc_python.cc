/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(mains_frequency_calc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(720cea1f28679b4420e18ba6d397d334)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <pulsed_power_daq/mains_frequency_calc.h>
// pydoc.h is automatically generated in the build directory
#include <mains_frequency_calc_pydoc.h>

void bind_mains_frequency_calc(py::module& m)
{

    using mains_frequency_calc    = ::gr::pulsed_power_daq::mains_frequency_calc;


    py::class_<mains_frequency_calc, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<mains_frequency_calc>>(m, "mains_frequency_calc", D(mains_frequency_calc))

        .def(py::init(&mains_frequency_calc::make),
           py::arg("expected_sample_rate"),
           py::arg("low_threshold"),
           py::arg("high_threshold"),
           D(mains_frequency_calc,make)
        )
        



        ;




}








